package com.rsclauncher.patcher;

import org.objectweb.asm.ClassVisitor;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

import static org.objectweb.asm.Opcodes.*;

public class ImageLoaderPatcher extends ClassVisitor {

  public ImageLoaderPatcher(int i, ClassVisitor cv) {
    super(i, cv);
  }

  @Override
  public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {
    if (descriptor.equals("(Ljava/awt/Component;[BB)Ljava/awt/Image;")) {
      return null;
    } else {
      return cv.visitMethod(access, name, descriptor, signature, exceptions);
    }
  }

  @Override
  public void visitEnd() {
    {
      MethodVisitor mv = cv.visitMethod(ACC_FINAL + ACC_STATIC, "a", "(Ljava/awt/Component;[BB)Ljava/awt/Image;", null, null);
      mv.visitCode();
      Label l0 = new Label();
      Label l1 = new Label();
      Label l2 = new Label();
      mv.visitTryCatchBlock(l0, l1, l2, "java/lang/RuntimeException");
      Label l3 = new Label();
      Label l4 = new Label();
      Label l5 = new Label();
      mv.visitTryCatchBlock(l3, l4, l5, "java/lang/RuntimeException");
      Label l6 = new Label();
      Label l7 = new Label();
      Label l8 = new Label();
      mv.visitTryCatchBlock(l6, l7, l8, "java/lang/RuntimeException");
      Label l9 = new Label();
      Label l10 = new Label();
      Label l11 = new Label();
      mv.visitTryCatchBlock(l9, l10, l11, "java/lang/RuntimeException");
      Label l12 = new Label();
      Label l13 = new Label();
      mv.visitTryCatchBlock(l12, l13, l13, "java/lang/RuntimeException");
      Label l14 = new Label();
      Label l15 = new Label();
      mv.visitTryCatchBlock(l14, l15, l15, "java/lang/RuntimeException");
      mv.visitFieldInsn(GETSTATIC, "client", "xf", "Z");
      mv.visitVarInsn(ISTORE, 10);
      mv.visitLabel(l9);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 14);
      mv.visitInsn(BALOAD);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 15);
      mv.visitInsn(BALOAD);
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitInsn(IMUL);
      mv.visitInsn(IADD);
      mv.visitFieldInsn(PUTSTATIC, "ib", "k", "I");
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 13);
      mv.visitInsn(BALOAD);
      mv.visitInsn(IMUL);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 12);
      mv.visitInsn(BALOAD);
      mv.visitInsn(INEG);
      mv.visitInsn(ISUB);
      mv.visitFieldInsn(PUTSTATIC, "wb", "h", "I");
      mv.visitFieldInsn(GETSTATIC, "i", "d", "I");
      mv.visitInsn(ICONST_1);
      mv.visitInsn(IADD);
      mv.visitFieldInsn(PUTSTATIC, "i", "d", "I");
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitIntInsn(NEWARRAY, T_BYTE);
      mv.visitVarInsn(ASTORE, 3);
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitIntInsn(NEWARRAY, T_BYTE);
      mv.visitVarInsn(ASTORE, 4);
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitIntInsn(NEWARRAY, T_BYTE);
      mv.visitVarInsn(ASTORE, 5);
      mv.visitInsn(ICONST_0);
      mv.visitVarInsn(ISTORE, 6);
      Label l16 = new Label();
      mv.visitLabel(l16);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "[B", "[B", "[B", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
      mv.visitVarInsn(ILOAD, 6);
      mv.visitIntInsn(SIPUSH, 256);
      Label l17 = new Label();
      mv.visitJumpInsn(IF_ICMPGE, l17);
      mv.visitLabel(l6);
      mv.visitVarInsn(ALOAD, 3);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 20);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitInsn(ICONST_3);
      mv.visitInsn(IMUL);
      mv.visitInsn(IADD);
      mv.visitInsn(BALOAD);
      mv.visitInsn(BASTORE);
      mv.visitVarInsn(ALOAD, 4);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitInsn(ICONST_3);
      mv.visitInsn(IMUL);
      mv.visitIntInsn(BIPUSH, 19);
      mv.visitInsn(IADD);
      mv.visitInsn(BALOAD);
      mv.visitInsn(BASTORE);
      mv.visitVarInsn(ALOAD, 5);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(BIPUSH, 18);
      mv.visitVarInsn(ILOAD, 6);
      mv.visitInsn(ICONST_3);
      mv.visitInsn(IMUL);
      mv.visitInsn(IADD);
      mv.visitInsn(BALOAD);
      mv.visitInsn(BASTORE);
      mv.visitIincInsn(6, 1);
      mv.visitVarInsn(ILOAD, 10);
      mv.visitJumpInsn(IFNE, l3);
      mv.visitVarInsn(ILOAD, 10);
      mv.visitJumpInsn(IFEQ, l16);
      mv.visitLabel(l7);
      mv.visitJumpInsn(GOTO, l17);
      mv.visitLabel(l8);
      mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitInsn(ATHROW);
      mv.visitLabel(l17);
      mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
      mv.visitTypeInsn(NEW, "java/awt/image/IndexColorModel");
      mv.visitInsn(DUP);
      mv.visitIntInsn(BIPUSH, 8);
      mv.visitIntInsn(SIPUSH, 256);
      mv.visitVarInsn(ALOAD, 3);
      mv.visitVarInsn(ALOAD, 4);
      mv.visitVarInsn(ALOAD, 5);
      mv.visitMethodInsn(INVOKESPECIAL, "java/awt/image/IndexColorModel", "<init>", "(II[B[B[B)V", false);
      mv.visitFieldInsn(PUTSTATIC, "p", "fc", "Ljava/awt/image/ColorModel;");
      mv.visitLabel(l3);
      mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
      mv.visitVarInsn(ILOAD, 2);
      mv.visitIntInsn(BIPUSH, -110);
      Label l18 = new Label();
      mv.visitJumpInsn(IF_ICMPLT, l18);
      mv.visitInsn(ACONST_NULL);
      mv.visitTypeInsn(CHECKCAST, "java/awt/Component");
      mv.visitInsn(ACONST_NULL);
      mv.visitTypeInsn(CHECKCAST, "[B");
      mv.visitIntInsn(BIPUSH, 125);
      mv.visitMethodInsn(INVOKESTATIC, "i", "a", "(Ljava/awt/Component;[BB)Ljava/awt/Image;", false);
      mv.visitInsn(POP);
      mv.visitLabel(l4);
      mv.visitJumpInsn(GOTO, l18);
      mv.visitLabel(l5);
      mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitInsn(ATHROW);
      mv.visitLabel(l18);
      mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
      mv.visitFieldInsn(GETSTATIC, "ib", "k", "I");
      mv.visitFieldInsn(GETSTATIC, "wb", "h", "I");
      mv.visitInsn(IMUL);
      mv.visitIntInsn(NEWARRAY, T_BYTE);
      mv.visitVarInsn(ASTORE, 6);
      mv.visitInsn(ICONST_0);
      mv.visitVarInsn(ISTORE, 7);
      mv.visitFieldInsn(GETSTATIC, "ib", "k", "I");
      mv.visitInsn(ICONST_1);
      mv.visitInsn(ISUB);
      mv.visitVarInsn(ISTORE, 8);
      Label l19 = new Label();
      mv.visitLabel(l19);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "[B", "[B", "[B", "[B", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
      mv.visitInsn(ICONST_M1);
      mv.visitVarInsn(ILOAD, 8);
      mv.visitInsn(ICONST_M1);
      mv.visitInsn(IXOR);
      Label l20 = new Label();
      mv.visitJumpInsn(IF_ICMPLT, l20);
      mv.visitInsn(ICONST_0);
      mv.visitVarInsn(ISTORE, 9);
      Label l21 = new Label();
      mv.visitLabel(l21);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "[B", "[B", "[B", "[B", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
      mv.visitVarInsn(ILOAD, 9);
      mv.visitFieldInsn(GETSTATIC, "wb", "h", "I");
      Label l22 = new Label();
      mv.visitJumpInsn(IF_ICMPGE, l22);
      mv.visitLabel(l0);
      mv.visitVarInsn(ALOAD, 6);
      mv.visitVarInsn(ILOAD, 7);
      mv.visitIincInsn(7, 1);
      mv.visitVarInsn(ALOAD, 1);
      mv.visitIntInsn(SIPUSH, 786);
      mv.visitVarInsn(ILOAD, 9);
      mv.visitVarInsn(ILOAD, 8);
      mv.visitFieldInsn(GETSTATIC, "wb", "h", "I");
      mv.visitInsn(IMUL);
      mv.visitInsn(IADD);
      mv.visitInsn(IADD);
      mv.visitInsn(BALOAD);
      mv.visitInsn(BASTORE);
      mv.visitIincInsn(9, 1);
      mv.visitVarInsn(ILOAD, 10);
      Label l23 = new Label();
      mv.visitJumpInsn(IFNE, l23);
      mv.visitVarInsn(ILOAD, 10);
      mv.visitJumpInsn(IFEQ, l21);
      mv.visitLabel(l1);
      mv.visitJumpInsn(GOTO, l22);
      mv.visitLabel(l2);
      mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitInsn(ATHROW);
      mv.visitLabel(l22);
      mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
      mv.visitIincInsn(8, -1);
      mv.visitLabel(l23);
      mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
      mv.visitVarInsn(ILOAD, 10);
      mv.visitJumpInsn(IFEQ, l19);
      mv.visitLabel(l20);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "[B", "[B", "[B", "[B", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.INTEGER}, 0, new Object[] {});
      mv.visitVarInsn(ALOAD, 0);
      mv.visitFieldInsn(GETSTATIC, "sa", "e", "Ll;");
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/awt/Component", "createImage", "(Ljava/awt/image/ImageProducer;)Ljava/awt/Image;", false);
      mv.visitVarInsn(ASTORE, 8);
      mv.visitIntInsn(BIPUSH, 117);
      mv.visitVarInsn(ALOAD, 6);
      mv.visitMethodInsn(INVOKESTATIC, "ub", "a", "(I[B)V", false);
      mv.visitVarInsn(ALOAD, 0);
      mv.visitVarInsn(ALOAD, 8);
      mv.visitFieldInsn(GETSTATIC, "sa", "e", "Ll;");
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/awt/Component", "prepareImage", "(Ljava/awt/Image;Ljava/awt/image/ImageObserver;)Z", false);
      mv.visitInsn(POP);
      mv.visitIntInsn(BIPUSH, 119);
      mv.visitVarInsn(ALOAD, 6);
      mv.visitMethodInsn(INVOKESTATIC, "ub", "a", "(I[B)V", false);
      mv.visitVarInsn(ALOAD, 0);
      mv.visitVarInsn(ALOAD, 8);
      mv.visitFieldInsn(GETSTATIC, "sa", "e", "Ll;");
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/awt/Component", "prepareImage", "(Ljava/awt/Image;Ljava/awt/image/ImageObserver;)Z", false);
      mv.visitInsn(POP);
      mv.visitIntInsn(BIPUSH, 123);
      mv.visitVarInsn(ALOAD, 6);
      mv.visitMethodInsn(INVOKESTATIC, "ub", "a", "(I[B)V", false);
      mv.visitVarInsn(ALOAD, 0);
      mv.visitVarInsn(ALOAD, 8);
      mv.visitFieldInsn(GETSTATIC, "sa", "e", "Ll;");
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/awt/Component", "prepareImage", "(Ljava/awt/Image;Ljava/awt/image/ImageObserver;)Z", false);
      mv.visitInsn(POP);

      mv.visitVarInsn(ALOAD, 8);
      mv.visitMethodInsn(INVOKESTATIC, "com/rsclauncher/util/SaveImage", "save", "(Ljava/awt/Image;)V", false);

      mv.visitVarInsn(ALOAD, 8);
      mv.visitLabel(l10);
      mv.visitInsn(ARETURN);
      mv.visitLabel(l11);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitVarInsn(ASTORE, 3);
      mv.visitLabel(l14);
      mv.visitVarInsn(ALOAD, 3);
      mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
      mv.visitInsn(DUP);
      mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
      mv.visitFieldInsn(GETSTATIC, "i", "z", "[Ljava/lang/String;");
      mv.visitInsn(ICONST_0);
      mv.visitInsn(AALOAD);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
      mv.visitVarInsn(ALOAD, 0);
      Label l24 = new Label();
      mv.visitJumpInsn(IFNULL, l24);
      mv.visitFieldInsn(GETSTATIC, "i", "z", "[Ljava/lang/String;");
      mv.visitInsn(ICONST_2);
      mv.visitInsn(AALOAD);
      mv.visitJumpInsn(GOTO, l12);
      mv.visitLabel(l15);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "java/lang/RuntimeException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitInsn(ATHROW);
      mv.visitLabel(l24);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "java/lang/RuntimeException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 2, new Object[] {"java/lang/RuntimeException", "java/lang/StringBuilder"});
      mv.visitFieldInsn(GETSTATIC, "i", "z", "[Ljava/lang/String;");
      mv.visitInsn(ICONST_1);
      mv.visitInsn(AALOAD);
      mv.visitLabel(l12);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "java/lang/RuntimeException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 3, new Object[] {"java/lang/RuntimeException", "java/lang/StringBuilder", "java/lang/String"});
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
      mv.visitIntInsn(BIPUSH, 44);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
      mv.visitVarInsn(ALOAD, 1);
      Label l25 = new Label();
      mv.visitJumpInsn(IFNULL, l25);
      mv.visitFieldInsn(GETSTATIC, "i", "z", "[Ljava/lang/String;");
      mv.visitInsn(ICONST_2);
      mv.visitInsn(AALOAD);
      Label l26 = new Label();
      mv.visitJumpInsn(GOTO, l26);
      mv.visitLabel(l13);
      mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/RuntimeException"});
      mv.visitInsn(ATHROW);
      mv.visitLabel(l25);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "java/lang/RuntimeException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 2, new Object[] {"java/lang/RuntimeException", "java/lang/StringBuilder"});
      mv.visitFieldInsn(GETSTATIC, "i", "z", "[Ljava/lang/String;");
      mv.visitInsn(ICONST_1);
      mv.visitInsn(AALOAD);
      mv.visitLabel(l26);
      mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"java/awt/Component", "[B", Opcodes.INTEGER, "java/lang/RuntimeException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.INTEGER}, 3, new Object[] {"java/lang/RuntimeException", "java/lang/StringBuilder", "java/lang/String"});
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
      mv.visitIntInsn(BIPUSH, 44);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
      mv.visitVarInsn(ILOAD, 2);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
      mv.visitIntInsn(BIPUSH, 41);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
      mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
      mv.visitMethodInsn(INVOKESTATIC, "bc", "a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lkb;", false);
      mv.visitInsn(ATHROW);
      mv.visitMaxs(9, 11);
      mv.visitEnd();
    }
  }

}
